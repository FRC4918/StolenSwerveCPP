General coding:
- Create swerveModule SDS-wheel travel, so that I can convert rotations to inches.
- Use odometry object.
- Double-check CANCoder settings.
- Finish TalonFX Drive settings.
- Finish TalonFX Turn settings.
- Add more unit types.
- There is a difference between kChassisMaxSpeed and kModuleMaxSpeed.
- Double check inversion with controller.
- Add code to zero CANcoder.
- Current limits.
- Add LiveWindow Groupings.
- GUI Button to reset gyro.
- GUI Button to reset module encoders.

Administrative:
- Put SwerveModule code in its own folder.
- Give SwerveModule its own header for constants (then remove constants.h from swerveModule files).
- Get rid of std::cout and <iostream> per Adam.
- Make sure all functions are capitalized.
- Add comments everywhere.
- Read style guide.
- Optimize units?
- Should targetWheelSpeed and targetAngle have k prefix?
- Get units and and wpi/numbers includes out of Constants.h
- Add guards to all header files.
- Make modules their own member class?
- "ask about these".

With physical robot:
- Tune PID for Drive.
- Tune PID for Turn.
- Get final module locations.